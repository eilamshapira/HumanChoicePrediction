
Start training the environment...
Train:   2%|▏         | 45/2260 [00:01<01:15, 29.20it/s]
################
# Epoch 0
################
Retrieved vector for key 89: torch.Size([2, 64])
Retrieved vector for key 152: torch.Size([2, 64])
Retrieved vector for key 0: torch.Size([2, 64])
Retrieved vector for key 71: torch.Size([2, 64])
Retrieved vector for key 89: torch.Size([2, 64])
Retrieved vector for key 152: torch.Size([2, 64])
Retrieved vector for key 0: torch.Size([2, 64])
Retrieved vector for key 71: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 34: torch.Size([2, 64])
Retrieved vector for key 21: torch.Size([2, 64])
Retrieved vector for key 43: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([2, 64])
Retrieved vector for key 21: torch.Size([2, 64])
Retrieved vector for key 43: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 84: torch.Size([2, 64])
Retrieved vector for key 118: torch.Size([2, 64])
Retrieved vector for key 90: torch.Size([2, 64])
Retrieved vector for key 145: torch.Size([2, 64])
Retrieved vector for key 84: torch.Size([2, 64])
Retrieved vector for key 118: torch.Size([2, 64])
Retrieved vector for key 90: torch.Size([2, 64])
Retrieved vector for key 145: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 45: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([2, 64])
Retrieved vector for key 4: torch.Size([2, 64])
Retrieved vector for key 143: torch.Size([2, 64])
Retrieved vector for key 45: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([2, 64])
Retrieved vector for key 4: torch.Size([2, 64])
Retrieved vector for key 143: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([2, 64])
Retrieved vector for key 32: torch.Size([2, 64])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([2, 64])
Retrieved vector for key 32: torch.Size([2, 64])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 147: torch.Size([2, 64])
Retrieved vector for key 170: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 147: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([2, 64])
Retrieved vector for key 19: torch.Size([2, 64])
Retrieved vector for key 8: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([2, 64])
Retrieved vector for key 19: torch.Size([2, 64])
Retrieved vector for key 8: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 39: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 197: torch.Size([2, 64])
Retrieved vector for key 116: torch.Size([2, 64])
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([2, 64])
Retrieved vector for key 116: torch.Size([2, 64])
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([2, 64])
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 206: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([2, 64])
Retrieved vector for key 168: torch.Size([2, 64])
Retrieved vector for key 206: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([2, 64])
Retrieved vector for key 168: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 23: torch.Size([2, 64])
Retrieved vector for key 94: torch.Size([2, 64])
Retrieved vector for key 189: torch.Size([2, 64])
Retrieved vector for key 70: torch.Size([2, 64])
Retrieved vector for key 23: torch.Size([2, 64])
Retrieved vector for key 94: torch.Size([2, 64])
Retrieved vector for key 189: torch.Size([2, 64])
Retrieved vector for key 70: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 69: torch.Size([2, 64])
Retrieved vector for key 29: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([2, 64])
Retrieved vector for key 144: torch.Size([2, 64])
Retrieved vector for key 69: torch.Size([2, 64])
Retrieved vector for key 29: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([2, 64])
Retrieved vector for key 144: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 47: torch.Size([2, 64])
Retrieved vector for key 64: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([2, 64])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 47: torch.Size([2, 64])
Retrieved vector for key 64: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([2, 64])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 126: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([2, 64])
Retrieved vector for key 22: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([2, 64])
Retrieved vector for key 22: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 88: torch.Size([2, 64])
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 88: torch.Size([2, 64])
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 141: torch.Size([2, 64])
Retrieved vector for key 110: torch.Size([2, 64])
Retrieved vector for key 195: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 141: torch.Size([2, 64])
Retrieved vector for key 110: torch.Size([2, 64])
Retrieved vector for key 195: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 188: torch.Size([2, 64])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 172: torch.Size([2, 64])
Retrieved vector for key 85: torch.Size([2, 64])
Retrieved vector for key 188: torch.Size([2, 64])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 172: torch.Size([2, 64])
Retrieved vector for key 85: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 155: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 155: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([2, 64])
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([2, 64])
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([2, 64])
Retrieved vector for key 132: torch.Size([2, 64])
Retrieved vector for key 24: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([2, 64])
Retrieved vector for key 132: torch.Size([2, 64])
Retrieved vector for key 24: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 95: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([2, 64])
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 95: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 55: torch.Size([2, 64])
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 55: torch.Size([2, 64])
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 75: torch.Size([2, 64])
Retrieved vector for key 189: torch.Size([128, 10])
Normalizing vector for key 189 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([2, 64])
Retrieved vector for key 189: torch.Size([128, 10])
Normalizing vector for key 189 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 193: torch.Size([2, 64])
Retrieved vector for key 146: torch.Size([2, 64])
Retrieved vector for key 208: torch.Size([2, 64])
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 193: torch.Size([2, 64])
Retrieved vector for key 146: torch.Size([2, 64])
Retrieved vector for key 208: torch.Size([2, 64])
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 194: torch.Size([2, 64])
Retrieved vector for key 148: torch.Size([2, 64])
Retrieved vector for key 12: torch.Size([2, 64])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 194: torch.Size([2, 64])
Retrieved vector for key 148: torch.Size([2, 64])
Retrieved vector for key 12: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 162: torch.Size([2, 64])
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([2, 64])
Retrieved vector for key 162: torch.Size([2, 64])
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 58: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 58: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 119: torch.Size([2, 64])
Retrieved vector for key 179: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 119: torch.Size([2, 64])
Retrieved vector for key 179: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 200: torch.Size([2, 64])
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 200: torch.Size([2, 64])
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([2, 64])
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([2, 64])
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 83: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([2, 64])
Retrieved vector for key 121: torch.Size([2, 64])
Retrieved vector for key 83: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([2, 64])
Retrieved vector for key 121: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([2, 64])
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 50: torch.Size([2, 64])
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 50: torch.Size([2, 64])
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([2, 64])
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([2, 64])
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 200: torch.Size([128, 10])
Normalizing vector for key 200 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([2, 64])
Retrieved vector for key 56: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 200: torch.Size([128, 10])
Normalizing vector for key 200 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([2, 64])
Retrieved vector for key 56: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([2, 64])
Retrieved vector for key 36: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([2, 64])
Retrieved vector for key 36: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([2, 64])
Retrieved vector for key 129: torch.Size([2, 64])
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([2, 64])
Retrieved vector for key 129: torch.Size([2, 64])
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([2, 64])
Retrieved vector for key 64: torch.Size([128, 10])
Normalizing vector for key 64 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([2, 64])
Retrieved vector for key 64: torch.Size([128, 10])
Normalizing vector for key 64 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 12: torch.Size([128, 10])
Normalizing vector for key 12 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([2, 64])
Retrieved vector for key 134: torch.Size([2, 64])
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 12: torch.Size([128, 10])
Normalizing vector for key 12 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([2, 64])
Retrieved vector for key 134: torch.Size([2, 64])
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 13: torch.Size([2, 64])
Retrieved vector for key 62: torch.Size([2, 64])
Retrieved vector for key 171: torch.Size([2, 64])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 13: torch.Size([2, 64])
Retrieved vector for key 62: torch.Size([2, 64])
Retrieved vector for key 171: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([2, 64])
Retrieved vector for key 112: torch.Size([2, 64])
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([2, 64])
Retrieved vector for key 112: torch.Size([2, 64])
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 63: torch.Size([2, 64])
Retrieved vector for key 12: torch.Size([128, 10])
Normalizing vector for key 12 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([2, 64])
Retrieved vector for key 165: torch.Size([2, 64])
Retrieved vector for key 63: torch.Size([2, 64])
Retrieved vector for key 12: torch.Size([128, 10])
Normalizing vector for key 12 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([2, 64])
Retrieved vector for key 165: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 189: torch.Size([128, 10])
Normalizing vector for key 189 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 193: torch.Size([128, 10])
Normalizing vector for key 193 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 54: torch.Size([2, 64])
Retrieved vector for key 189: torch.Size([128, 10])
Normalizing vector for key 189 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 193: torch.Size([128, 10])
Normalizing vector for key 193 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 54: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 131: torch.Size([2, 64])
Retrieved vector for key 196: torch.Size([2, 64])
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 121: torch.Size([128, 10])
Normalizing vector for key 121 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([2, 64])
Retrieved vector for key 196: torch.Size([2, 64])
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 121: torch.Size([128, 10])
Normalizing vector for key 121 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 191: torch.Size([2, 64])
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 83: torch.Size([128, 10])
Normalizing vector for key 83 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([2, 64])
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 83: torch.Size([128, 10])
Normalizing vector for key 83 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 82: torch.Size([2, 64])
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 82: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])

Train:   4%|▍         | 101/2260 [00:03<01:26, 24.98it/s]
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 108: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 173: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([2, 64])
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([2, 64])
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 128: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([2, 64])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([2, 64])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 185: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 185: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 43: torch.Size([128, 10])
Normalizing vector for key 43 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([2, 64])
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 43: torch.Size([128, 10])
Normalizing vector for key 43 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([2, 64])
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 144: torch.Size([128, 10])
Normalizing vector for key 144 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 144: torch.Size([128, 10])
Normalizing vector for key 144 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 202: torch.Size([2, 64])
Retrieved vector for key 79: torch.Size([2, 64])
Retrieved vector for key 201: torch.Size([2, 64])
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([2, 64])
Retrieved vector for key 79: torch.Size([2, 64])
Retrieved vector for key 201: torch.Size([2, 64])
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 134: torch.Size([128, 10])
Normalizing vector for key 134 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 134: torch.Size([128, 10])
Normalizing vector for key 134 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([2, 64])
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([2, 64])
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 87: torch.Size([2, 64])
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 87: torch.Size([2, 64])
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 144: torch.Size([128, 10])
Normalizing vector for key 144 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 144: torch.Size([128, 10])
Normalizing vector for key 144 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([2, 64])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 164: torch.Size([2, 64])
Retrieved vector for key 124: torch.Size([2, 64])
Retrieved vector for key 99: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([2, 64])
Retrieved vector for key 124: torch.Size([2, 64])
Retrieved vector for key 99: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 13: torch.Size([128, 10])
Normalizing vector for key 13 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 80: torch.Size([2, 64])
Retrieved vector for key 17: torch.Size([2, 64])
Retrieved vector for key 205: torch.Size([2, 64])
Retrieved vector for key 13: torch.Size([128, 10])
Normalizing vector for key 13 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 80: torch.Size([2, 64])
Retrieved vector for key 17: torch.Size([2, 64])
Retrieved vector for key 205: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 42: torch.Size([2, 64])
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 42: torch.Size([2, 64])
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([2, 64])
Retrieved vector for key 99: torch.Size([128, 10])
Normalizing vector for key 99 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([2, 64])
Retrieved vector for key 99: torch.Size([128, 10])
Normalizing vector for key 99 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 50: torch.Size([128, 10])
Normalizing vector for key 50 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 50: torch.Size([128, 10])
Normalizing vector for key 50 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 190: torch.Size([2, 64])
Retrieved vector for key 60: torch.Size([2, 64])
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 190: torch.Size([2, 64])
Retrieved vector for key 60: torch.Size([2, 64])
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 106: torch.Size([2, 64])
Retrieved vector for key 156: torch.Size([2, 64])
Retrieved vector for key 46: torch.Size([2, 64])
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 106: torch.Size([2, 64])
Retrieved vector for key 156: torch.Size([2, 64])
Retrieved vector for key 46: torch.Size([2, 64])
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([128, 10])
Normalizing vector for key 53 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([128, 10])
Normalizing vector for key 53 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([2, 64])
Retrieved vector for key 35: torch.Size([2, 64])
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([2, 64])
Retrieved vector for key 35: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([2, 64])
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([2, 64])
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 117: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 117: torch.Size([2, 64])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 22: torch.Size([128, 10])
Normalizing vector for key 22 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([2, 64])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 22: torch.Size([128, 10])
Normalizing vector for key 22 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 130: torch.Size([2, 64])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 7: torch.Size([2, 64])
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 130: torch.Size([2, 64])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 7: torch.Size([2, 64])
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 61: torch.Size([2, 64])
Retrieved vector for key 60: torch.Size([128, 10])
Normalizing vector for key 60 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([2, 64])
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 61: torch.Size([2, 64])
Retrieved vector for key 60: torch.Size([128, 10])
Normalizing vector for key 60 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([2, 64])
Retrieved vector for key 166: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([2, 64])
Retrieved vector for key 166: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([2, 64])
Retrieved vector for key 187: torch.Size([2, 64])
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([2, 64])
Retrieved vector for key 187: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 207: torch.Size([2, 64])
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 207: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 31: torch.Size([2, 64])
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 31: torch.Size([2, 64])
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 5: torch.Size([2, 64])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 5: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 77: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 43: torch.Size([128, 10])
Normalizing vector for key 43 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 77: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 43: torch.Size([128, 10])
Normalizing vector for key 43 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Trainingector shape: torch.Size([4, 128, 10])
Input vector shape: torch.Size([4, 10, 70])e, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([2, 64])
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 9: torch.Size([2, 64])
Retrieved vector for key 109: torch.Size([2, 64])
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([2, 64])
Retrieved vector for key 109: torch.Size([2, 64])
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 171: torch.Size([128, 10])
Normalizing vector for key 171 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 6: torch.Size([2, 64])
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 171: torch.Size([128, 10])
Normalizing vector for key 171 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 6: torch.Size([2, 64])
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 64: torch.Size([128, 10])
Normalizing vector for key 64 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 64: torch.Size([128, 10])
Normalizing vector for key 64 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 18: torch.Size([2, 64])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([2, 64])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([2, 64])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 16: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 13: torch.Size([128, 10])
Normalizing vector for key 13 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 16: torch.Size([2, 64])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 13: torch.Size([128, 10])
Normalizing vector for key 13 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([2, 64])
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 100: torch.Size([2, 64])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)

Train:   7%|▋         | 152/2260 [00:05<01:32, 22.82it/s]
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([128, 10])
Normalizing vector for key 9 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 52: torch.Size([2, 64])
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 52: torch.Size([2, 64])
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 208: torch.Size([128, 10])
Normalizing vector for key 208 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 174: torch.Size([128, 10])
Normalizing vector for key 174 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 125: torch.Size([128, 10])
Normalizing vector for key 125 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 208: torch.Size([128, 10])
Normalizing vector for key 208 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 174: torch.Size([128, 10])
Normalizing vector for key 174 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 187: torch.Size([128, 10])
Normalizing vector for key 187 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 6: torch.Size([128, 10])
Normalizing vector for key 6 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 187: torch.Size([128, 10])
Normalizing vector for key 187 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 6: torch.Size([128, 10])
Normalizing vector for key 6 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([2, 64])
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([2, 64])
Retrieved vector for key 95: torch.Size([128, 10])
Normalizing vector for key 95 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 141: torch.Size([128, 10])
Normalizing vector for key 141 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 141: torch.Size([128, 10])
Normalizing vector for key 141 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([128, 10])
Normalizing vector for key 97 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([128, 10])
Normalizing vector for key 97 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 162: torch.Size([128, 10])
Normalizing vector for key 162 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 111: torch.Size([128, 10])
Normalizing vector for key 111 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([2, 64])
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([2, 64])
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 138: torch.Size([2, 64])
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 138: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 67: torch.Size([2, 64])
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 67: torch.Size([2, 64])
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([2, 64])
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([2, 64])
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 72: torch.Size([2, 64])
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 72: torch.Size([2, 64])
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 4: torch.Size([128, 10])
Normalizing vector for key 4 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 52: torch.Size([128, 10])
Normalizing vector for key 52 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 46: torch.Size([128, 10])
Normalizing vector for key 46 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 52: torch.Size([128, 10])
Normalizing vector for key 52 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 46: torch.Size([128, 10])
Normalizing vector for key 46 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 72: torch.Size([128, 10])
Normalizing vector for key 72 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 72: torch.Size([128, 10])
Normalizing vector for key 72 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([128, 10])
Normalizing vector for key 102 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([128, 10])
Normalizing vector for key 102 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 28: torch.Size([128, 10])
Normalizing vector for key 28 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 28: torch.Size([128, 10])
Normalizing vector for key 28 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 156: torch.Size([128, 10])
Normalizing vector for key 156 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([128, 10])
Normalizing vector for key 9 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([128, 10])
Normalizing vector for key 9 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 17: torch.Size([128, 10])
Normalizing vector for key 17 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 17: torch.Size([128, 10])
Normalizing vector for key 17 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 78: torch.Size([128, 10])
Normalizing vector for key 78 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 114: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([128, 10])
Normalizing vector for key 30 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([128, 10])
Normalizing vector for key 78 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 114: torch.Size([2, 64])
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([128, 10])
Normalizing vector for key 30 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 46: torch.Size([128, 10])
Normalizing vector for key 46 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 15: torch.Size([2, 64])
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 46: torch.Size([128, 10])
Normalizing vector for key 46 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 15: torch.Size([2, 64])
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 41: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 41: torch.Size([2, 64])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 159: torch.Size([2, 64])
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 159: torch.Size([2, 64])
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 153: torch.Size([2, 64])
Retrieved vector for key 119: torch.Size([128, 10])
Normalizing vector for key 119 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 153: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 40: torch.Size([128, 10])
Normalizing vector for key 40 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 122: torch.Size([128, 10])
Normalizing vector for key 122 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 152: torch.Size([128, 10])
Normalizing vector for key 152 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 152: torch.Size([128, 10])
Normalizing vector for key 152 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 194: torch.Size([128, 10])
Normalizing vector for key 194 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 194: torch.Size([128, 10])
Normalizing vector for key 194 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 155: torch.Size([128, 10])
Normalizing vector for key 155 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 155: torch.Size([128, 10])
Normalizing vector for key 155 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 26: torch.Size([128, 10])
Normalizing vector for key 26 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 26: torch.Size([128, 10])
Normalizing vector for key 26 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 32: torch.Size([128, 10])
Normalizing vector for key 32 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 97: torch.Size([128, 10])
Normalizing vector for key 97 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([128, 10])
Normalizing vector for key 97 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 99: torch.Size([128, 10])
Normalizing vector for key 99 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 99: torch.Size([128, 10])
Normalizing vector for key 99 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 167: torch.Size([128, 10])
Normalizing vector for key 167 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 97: torch.Size([128, 10])
Normalizing vector for key 97 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([128, 10])
Normalizing vector for key 30 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 167: torch.Size([128, 10])

Train:   9%|▊         | 197/2260 [00:07<01:43, 19.94it/s]
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 178: torch.Size([2, 64])
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 178: torch.Size([2, 64])
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 16: torch.Size([128, 10])
Normalizing vector for key 16 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 206: torch.Size([128, 10])
Normalizing vector for key 206 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 16: torch.Size([128, 10])
Normalizing vector for key 16 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 175: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 1: torch.Size([128, 10])
Normalizing vector for key 1 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 175: torch.Size([2, 64])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 60: torch.Size([128, 10])
Normalizing vector for key 60 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([128, 10])
Normalizing vector for key 102 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 31: torch.Size([128, 10])
Normalizing vector for key 31 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 60: torch.Size([128, 10])
Normalizing vector for key 60 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 102: torch.Size([128, 10])
Normalizing vector for key 102 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 31: torch.Size([128, 10])
Normalizing vector for key 31 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 123: torch.Size([2, 64])
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 123: torch.Size([2, 64])
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 169: torch.Size([128, 10])
Normalizing vector for key 169 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 168: torch.Size([128, 10])
Normalizing vector for key 168 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 169: torch.Size([128, 10])
Normalizing vector for key 169 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 168: torch.Size([128, 10])
Normalizing vector for key 168 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 147: torch.Size([128, 10])
Normalizing vector for key 147 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 41: torch.Size([128, 10])
Normalizing vector for key 41 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 41: torch.Size([128, 10])
Normalizing vector for key 41 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 204: torch.Size([128, 10])
Normalizing vector for key 204 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 202: torch.Size([128, 10])
Normalizing vector for key 202 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 204: torch.Size([128, 10])
Normalizing vector for key 204 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 169: torch.Size([128, 10])
Normalizing vector for key 169 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 169: torch.Size([128, 10])
Normalizing vector for key 169 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 182: torch.Size([128, 10])
Normalizing vector for key 182 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 185: torch.Size([128, 10])
Normalizing vector for key 185 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 42: torch.Size([128, 10])
Normalizing vector for key 42 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 185: torch.Size([128, 10])
Normalizing vector for key 185 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 42: torch.Size([128, 10])
Normalizing vector for key 42 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 130: torch.Size([128, 10])
Normalizing vector for key 130 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 130: torch.Size([128, 10])
Normalizing vector for key 130 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 152: torch.Size([128, 10])
Normalizing vector for key 152 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 152: torch.Size([128, 10])
Normalizing vector for key 152 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 146: torch.Size([128, 10])
Normalizing vector for key 146 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([128, 10])
Normalizing vector for key 9 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 79: torch.Size([128, 10])
Normalizing vector for key 79 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 75: torch.Size([128, 10])
Normalizing vector for key 75 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 9: torch.Size([128, 10])
Normalizing vector for key 9 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 134: torch.Size([128, 10])
Normalizing vector for key 134 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 134: torch.Size([128, 10])
Normalizing vector for key 134 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 39: torch.Size([128, 10])
Normalizing vector for key 39 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 110: torch.Size([128, 10])
Normalizing vector for key 110 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 42: torch.Size([128, 10])
Normalizing vector for key 42 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 42: torch.Size([128, 10])
Normalizing vector for key 42 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 98: torch.Size([128, 10])
Normalizing vector for key 98 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 105: torch.Size([128, 10])
Normalizing vector for key 105 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 37: torch.Size([128, 10])
Normalizing vector for key 37 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 62: torch.Size([128, 10])
Normalizing vector for key 62 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 91: torch.Size([128, 10])
Normalizing vector for key 91 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 34: torch.Size([128, 10])
Normalizing vector for key 34 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 135: torch.Size([128, 10])
Normalizing vector for key 135 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 205: torch.Size([128, 10])
Normalizing vector for key 205 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 137: torch.Size([128, 10])
Normalizing vector for key 137 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 136: torch.Size([128, 10])
Normalizing vector for key 136 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 123: torch.Size([128, 10])
Normalizing vector for key 123 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 123: torch.Size([128, 10])
Normalizing vector for key 123 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 207: torch.Size([128, 10])
Normalizing vector for key 207 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 207: torch.Size([128, 10])
Normalizing vector for key 207 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([128, 10])
Normalizing vector for key 10 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([128, 10])
Normalizing vector for key 150 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 141: torch.Size([128, 10])
Normalizing vector for key 141 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([128, 10])
Normalizing vector for key 10 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([128, 10])
Normalizing vector for key 150 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 141: torch.Size([128, 10])
Normalizing vector for key 141 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 80: torch.Size([128, 10])
Normalizing vector for key 80 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 80: torch.Size([128, 10])
Normalizing vector for key 80 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 44: torch.Size([128, 10])
Normalizing vector for key 44 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 160: torch.Size([128, 10])
Normalizing vector for key 160 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 5: torch.Size([128, 10])
Normalizing vector for key 5 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 112: torch.Size([128, 10])
Normalizing vector for key 112 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 5: torch.Size([128, 10])
Normalizing vector for key 5 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])


Train:  13%|█▎        | 292/2260 [00:11<01:06, 29.49it/s]
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([128, 10])
Normalizing vector for key 78 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 155: torch.Size([128, 10])
Normalizing vector for key 155 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 86: torch.Size([128, 10])
Normalizing vector for key 86 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 65: torch.Size([128, 10])
Normalizing vector for key 65 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 89: torch.Size([128, 10])
Normalizing vector for key 89 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 107: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 107: torch.Size([2, 64])
Retrieved vector for key 199: torch.Size([128, 10])
Normalizing vector for key 199 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 106: torch.Size([128, 10])
Normalizing vector for key 106 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 23: torch.Size([128, 10])
Normalizing vector for key 23 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 106: torch.Size([128, 10])
Normalizing vector for key 106 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 170: torch.Size([128, 10])
Normalizing vector for key 170 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 69: torch.Size([128, 10])
Normalizing vector for key 69 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 48: torch.Size([128, 10])
Normalizing vector for key 48 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 84: torch.Size([128, 10])
Normalizing vector for key 84 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 81: torch.Size([128, 10])
Normalizing vector for key 81 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 140: torch.Size([128, 10])
Normalizing vector for key 140 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 121: torch.Size([128, 10])
Normalizing vector for key 121 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 85: torch.Size([128, 10])
Normalizing vector for key 85 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 121: torch.Size([128, 10])
Normalizing vector for key 121 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 207: torch.Size([128, 10])
Normalizing vector for key 207 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 207: torch.Size([128, 10])
Normalizing vector for key 207 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 177: torch.Size([128, 10])
Normalizing vector for key 177 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 192: torch.Size([128, 10])
Normalizing vector for key 192 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 101: torch.Size([128, 10])
Normalizing vector for key 101 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 67: torch.Size([128, 10])
Normalizing vector for key 67 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 67: torch.Size([128, 10])
Normalizing vector for key 67 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 118: torch.Size([128, 10])
Normalizing vector for key 118 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 49: torch.Size([128, 10])
Normalizing vector for key 49 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 55: torch.Size([128, 10])
Normalizing vector for key 55 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 33: torch.Size([128, 10])
Normalizing vector for key 33 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 21: torch.Size([128, 10])
Normalizing vector for key 21 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 55: torch.Size([128, 10])
Normalizing vector for key 55 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 82: torch.Size([128, 10])
Normalizing vector for key 82 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 15: torch.Size([128, 10])
Normalizing vector for key 15 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 82: torch.Size([128, 10])
Normalizing vector for key 82 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 15: torch.Size([128, 10])
Normalizing vector for key 15 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 173: torch.Size([128, 10])
Normalizing vector for key 173 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 120: torch.Size([2, 64])
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 120: torch.Size([2, 64])
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 74: torch.Size([128, 10])
Normalizing vector for key 74 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 185: torch.Size([128, 10])
Normalizing vector for key 185 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 185: torch.Size([128, 10])
Normalizing vector for key 185 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 47: torch.Size([128, 10])
Normalizing vector for key 47 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 151: torch.Size([128, 10])
Normalizing vector for key 151 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 116: torch.Size([128, 10])
Normalizing vector for key 116 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 142: torch.Size([128, 10])
Normalizing vector for key 142 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 164: torch.Size([128, 10])
Normalizing vector for key 164 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 116: torch.Size([128, 10])
Normalizing vector for key 116 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([128, 10])
Normalizing vector for key 30 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 30: torch.Size([128, 10])
Normalizing vector for key 30 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 109: torch.Size([128, 10])
Normalizing vector for key 109 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 96: torch.Size([128, 10])
Normalizing vector for key 96 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 96: torch.Size([128, 10])
Normalizing vector for key 96 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 139: torch.Size([128, 10])
Normalizing vector for key 139 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 54: torch.Size([128, 10])
Normalizing vector for key 54 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 54: torch.Size([128, 10])
Normalizing vector for key 54 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 183: torch.Size([128, 10])
Normalizing vector for key 183 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 100: torch.Size([128, 10])
Normalizing vector for key 100 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 165: torch.Size([128, 10])
Normalizing vector for key 165 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 197: torch.Size([128, 10])
Normalizing vector for key 197 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 201: torch.Size([128, 10])
Normalizing vector for key 201 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 54: torch.Size([128, 10])
Normalizing vector for key 54 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 54: torch.Size([128, 10])
Normalizing vector for key 54 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 195: torch.Size([128, 10])
Normalizing vector for key 195 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 149: torch.Size([128, 10])
Normalizing vector for key 149 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 157: torch.Size([128, 10])
Normalizing vector for key 157 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 174: torch.Size([128, 10])
Normalizing vector for key 174 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 59: torch.Size([128, 10])
Normalizing vector for key 59 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 174: torch.Size([128, 10])
Normalizing vector for key 174 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 8: torch.Size([128, 10])
Normalizing vector for key 8 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 115: torch.Size([128, 10])
Normalizing vector for key 115 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 179: torch.Size([128, 10])
Normalizing vector for key 179 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 115: torch.Size([128, 10])
Normalizing vector for key 115 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 58: torch.Size([128, 10])
Normalizing vector for key 58 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 90: torch.Size([128, 10])
Normalizing vector for key 90 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 11: torch.Size([128, 10])
Normalizing vector for key 11 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 186: torch.Size([128, 10])
Normalizing vector for key 186 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 176: torch.Size([128, 10])
Normalizing vector for key 176 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 113: torch.Size([128, 10])
Normalizing vector for key 113 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 133: torch.Size([128, 10])
Normalizing vector for key 133 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 68: torch.Size([128, 10])
Normalizing vector for key 68 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 124: torch.Size([128, 10])
Normalizing vector for key 124 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 124: torch.Size([128, 10])
Normalizing vector for key 124 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 24: torch.Size([128, 10])
Normalizing vector for key 24 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 51: torch.Size([128, 10])
Normalizing vector for key 51 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 38: torch.Size([2, 64])
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 56: torch.Size([128, 10])
Normalizing vector for key 56 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 29: torch.Size([128, 10])
Normalizing vector for key 29 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 38: torch.Size([2, 64])
Retrieved vector for key 180: torch.Size([128, 10])
Normalizing vector for key 180 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 198: torch.Size([128, 10])
Normalizing vector for key 198 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 198: torch.Size([128, 10])
Normalizing vector for key 198 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 127: torch.Size([128, 10])
Normalizing vector for key 127 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([128, 10])
Normalizing vector for key 10 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 128: torch.Size([128, 10])
Normalizing vector for key 128 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 131: torch.Size([128, 10])
Normalizing vector for key 131 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 10: torch.Size([128, 10])
Normalizing vector for key 10 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 116: torch.Size([128, 10])
Normalizing vector for key 116 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 196: torch.Size([128, 10])
Normalizing vector for key 196 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 116: torch.Size([128, 10])
Normalizing vector for key 116 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 0: torch.Size([128, 10])
Normalizing vector for key 0 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 191: torch.Size([128, 10])
Normalizing vector for key 191 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 175: torch.Size([128, 10])
Normalizing vector for key 175 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 181: torch.Size([128, 10])
Normalizing vector for key 181 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 129: torch.Size([128, 10])
Normalizing vector for key 129 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 175: torch.Size([128, 10])
Normalizing vector for key 175 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 184: torch.Size([128, 10])
Normalizing vector for key 184 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 153: torch.Size([128, 10])
Normalizing vector for key 153 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 73: torch.Size([128, 10])
Normalizing vector for key 73 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 27: torch.Size([128, 10])
Normalizing vector for key 27 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 153: torch.Size([128, 10])
Normalizing vector for key 153 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 92: torch.Size([128, 10])
Normalizing vector for key 92 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 28: torch.Size([128, 10])
Normalizing vector for key 28 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 7: torch.Size([128, 10])
Normalizing vector for key 7 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 28: torch.Size([128, 10])
Normalizing vector for key 28 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 7: torch.Size([128, 10])
Normalizing vector for key 7 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 45: torch.Size([128, 10])
Normalizing vector for key 45 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 168: torch.Size([128, 10])
Normalizing vector for key 168 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 168: torch.Size([128, 10])
Normalizing vector for key 168 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 2: torch.Size([128, 10])
Normalizing vector for key 2 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 71: torch.Size([128, 10])
Normalizing vector for key 71 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 3: torch.Size([128, 10])
Normalizing vector for key 3 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 208: torch.Size([128, 10])
Normalizing vector for key 208 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 193: torch.Size([128, 10])
Normalizing vector for key 193 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 208: torch.Size([128, 10])
Normalizing vector for key 208 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 70: torch.Size([128, 10])
Normalizing vector for key 70 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 193: torch.Size([128, 10])
Normalizing vector for key 193 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 96: torch.Size([128, 10])
Normalizing vector for key 96 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 63: torch.Size([128, 10])
Normalizing vector for key 63 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 108: torch.Size([128, 10])
Normalizing vector for key 108 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 96: torch.Size([128, 10])
Normalizing vector for key 96 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 63: torch.Size([128, 10])
Normalizing vector for key 63 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 72: torch.Size([128, 10])
Normalizing vector for key 72 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([128, 10])
Normalizing vector for key 78 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 57: torch.Size([128, 10])
Normalizing vector for key 57 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 72: torch.Size([128, 10])
Normalizing vector for key 72 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 78: torch.Size([128, 10])
Normalizing vector for key 78 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 57: torch.Size([128, 10])
Normalizing vector for key 57 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 126: torch.Size([128, 10])
Normalizing vector for key 126 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 200: torch.Size([128, 10])
Normalizing vector for key 200 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 14: torch.Size([128, 10])
Normalizing vector for key 14 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 200: torch.Size([128, 10])
Normalizing vector for key 200 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 172: torch.Size([128, 10])
Normalizing vector for key 172 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 161: torch.Size([128, 10])
Normalizing vector for key 161 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 18: torch.Size([128, 10])
Normalizing vector for key 18 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 104: torch.Size([128, 10])
Normalizing vector for key 104 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([128, 10])
Normalizing vector for key 150 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 93: torch.Size([128, 10])
Normalizing vector for key 93 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 143: torch.Size([128, 10])
Normalizing vector for key 143 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 94: torch.Size([128, 10])
Normalizing vector for key 94 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 150: torch.Size([128, 10])
Normalizing vector for key 150 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 145: torch.Size([128, 10])
Normalizing vector for key 145 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 148: torch.Size([128, 10])
Normalizing vector for key 148 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 132: torch.Size([128, 10])
Normalizing vector for key 132 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 35: torch.Size([128, 10])
Normalizing vector for key 35 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])
Final output shape: torch.Size([4, 10, 2])
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([128, 10])
Normalizing vector for key 53 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 163: torch.Size([128, 10])
Normalizing vector for key 163 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 166: torch.Size([128, 10])
Normalizing vector for key 166 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 188: torch.Size([128, 10])
Normalizing vector for key 188 from shape torch.Size([128, 10]) to (2, 64)
Retrieved vector for key 53: torch.Size([128, 10])
Normalizing vector for key 53 from shape torch.Size([128, 10]) to (2, 64)
Stage: Training
Input vector shape: torch.Size([4, 10, 70])
Permuted input vector shape: torch.Size([4, 70, 10])
Expanded game vector shape: torch.Size([4, 128, 10])
Expanded user vector shape: torch.Size([4, 128, 10])
Combined vector shape (should be [batch_size, total_input_dim, seq_length]): torch.Size([4, 326, 10])
Conv output shape: torch.Size([4, 256, 10])
Reshaped conv output shape: torch.Size([40, 256])

